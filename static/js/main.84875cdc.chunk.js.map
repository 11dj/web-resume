{"version":3,"sources":["components/home/ComA.js","components/home/index.js","actions/loading.js","containers/main.js","components/bit/index.js","containers/bit.js","App.js","serviceWorker.js","reducers/action.js","reducers/data.js","datas/main.js","reducers/index.js","stores/stores.js","index.js"],"names":["ComponentA","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","response","react_default","a","createElement","Component","MainComponent","post","responseToPost","keyword","console","log","className","ComA_ComponentA","enableLoading","dispatch","type","disableLoading","MainContainer","_React$Component","apply","arguments","inherits","createClass","key","value","home","React","connect","action","data","bindActionCreators","BitComponent","index_es","title","bio","solid","id","href","icon","BitContainer","bit_BitComponent","App","BrowserRouter","Route","exact","path","component","Boolean","window","location","hostname","match","initialState","valueA","length","undefined","nextState","assign","payload","en","th","skill","list","name","star","rootReducer","combineReducers","store","createStore","applyMiddleware","thunk","render","es","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.84875cdc.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\n\nexport default class ComponentA extends Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      response: '',\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        Component A\n      </div> \n    );\n  }\n}\n","import React, { Component } from 'react';\nimport './App.css';\n\nimport ComponentA from './ComA'\nclass MainComponent extends Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      response: '',\n      post: '',\n      responseToPost: '',\n      keyword: ''\n    }\n  }\n\n\n  render() {\n    console.log(this.props)\n    return (\n      <div className=\"App\">\n          Hello\n          <ComponentA />\n      </div>\n    );\n  }\n}\n\nexport default MainComponent;\n","export const enableLoading = () => {\n  return function (dispatch) {\n    dispatch({\n      type: 'LOADING_ON'\n    })\n  }\n}\n\nexport const disableLoading = () => {\n  return function (dispatch) {\n    dispatch({\n      type: 'LOADING_OFF'\n    })\n  }\n}","import React from 'react'\nimport MainComponent from '../components/home'\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\n\nimport {\n  enableLoading,\n  disableLoading\n} from '../actions/loading'\n\nimport './style.css'\n\n\n// Main container\nexport class MainContainer extends React.Component {\n  render () {\n    return (\n      <div className={'main-container'}> \n        <MainComponent {...this.props}/>\n      </div>\n    )\n  }\n}\n\n// reducer\nconst mapStateToProps = (state) => {\n  return { \n    action: state.action,\n    data: state.data\n  }\n}\n\n// function \nconst mapDispatchToProps = (dispatch) => {\n  return bindActionCreators({\n    // loading action\n    enableLoading, disableLoading,\n  }, dispatch)\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MainContainer)\n","import React, { Component } from 'react';\nimport './bit.css';\nimport {\n  Container,\n  Icon,\n  List\n} from \"nes-react\";\n\nexport default class BitComponent extends Component {\n  render() {\n    console.log(this.props)\n    return (\n      <div className=\"bit-container\">\n        <div className=\"bit-header\">\n          K I T T I S T\n        </div>\n        <div className='bit-section'>\n          <Container title=\"About me\">\n          {this.props.data.bio}\n          </Container>\n        </div>\n        <div className='bit-section'>\n          <Container title=\"Skills\">\n            <List solid>\n              <li className='bit-list' id='ff'>Javascript (ReactJS, NodeJS, Polymer, VueJS)</li>\n              <li className='bit-list'>React Native</li>\n              <li className='bit-list'>Python</li>\n              <li className='bit-list'>Java</li>\n              <li className='bit-list'>C++</li>\n              <li className='bit-list'>VB.net</li>\n              <li className='bit-list'>Firebase</li>\n              <li className='bit-list'>Flutter</li>\n              <li className='bit-list'>WebAssembly (Novice)</li>\n            </List>\n          </Container>\n        </div>\n        <div className='bit-section'>\n          <Container title=\"Projects\">\n            Under construction\n          </Container>\n        </div>\n        <footer className='footer'>\n          <div>\n            Feel free to contact me at\n          </div>\n          <a href=\"mailto:kittisq@gmail.com\" className='bit-footer-icon'>\n            <Icon icon=\"gmail\"/>\n          </a>\n          <a href=\"https://fb.com/kittis\" className='bit-footer-icon'>\n            <Icon icon=\"facebook\"/>\n          </a>\n          <a href=\"https://github.com/kittist\" className='bit-footer-icon'>\n            <Icon icon=\"github\"/>\n          </a>\n          <a href=\"https://www.linkedin.com/in/kittis/\" className='bit-footer-icon'>\n            <Icon icon=\"linkedin\"/>\n          </a>\n          <a href=\"https://fb.com/kittis\" className='bit-footer-icon'>\n            <Icon icon=\"instagram\"/>\n          </a>\n        </footer>\n      </div>\n    );\n  }\n}\n\n","import React from 'react'\nimport BitComponent from '../components/bit'\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\n\nimport {\n  enableLoading,\n  disableLoading\n} from '../actions/loading'\n\n\n// Main container\nexport class BitContainer extends React.Component {\n  render () {\n    return (\n      <div> \n        <BitComponent {...this.props}/>\n      </div>\n    )\n  }\n}\n\n// reducer\nconst mapStateToProps = (state) => {\n  return { \n    action: state.action,\n    data: state.data\n  }\n}\n\n// function \nconst mapDispatchToProps = (dispatch) => {\n  return bindActionCreators({\n    // loading action\n    enableLoading, disableLoading,\n  }, dispatch)\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(BitContainer)\n","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\nimport MainContainer from './containers/main'\nimport BitContainer from './containers/bit'\n\n\nclass App extends Component {\n\n  render() {\n    return (\n      <Router>\n        <div>\n          {/* <Route exact path=\"/\" component={MainContainer} /> */}\n          <Route exact path=\"/\" component={BitContainer} />\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initialState = {\n  valueA: ''\n}\n\nconst action = (state = initialState, action) => {\n  let nextState = Object.assign({}, state)\n  switch (action.type) {\n    case 'ACTION_A':\n      nextState.valueA = action.payload\n      return nextState\n    case 'ACTION_INITIAL':\n      return initialState\n    default:\n      return state\n  }\n}\n\nexport default action\n","import metadata from './../datas/main'\n\nconst initialState = {\n  bio: metadata.bio.en\n}\n\nconst data = (state = initialState, action) => {\n  let nextState = Object.assign({}, state)\n  switch (action.type) {\n    case 'ACTION_A':\n      nextState.valueA = action.payload\n      return nextState\n    case 'ACTION_INITIAL':\n      return initialState\n    default:\n      return state\n  }\n}\n\nexport default data\n","const metadata = {\n  bio: {\n    en: 'Hello, my name is Kitti Sintuprasert. I’m full-stack developer using React and a variety of other technologies. I am well versed in front-end technologies, making a beautiful website and mobile application UI with HTML/CSS, taking database/API from back-end and creating a user-facing functionality.',\n    th: ''\n  },\n  skill: [\n    {\n      title: 'Programming Languages',\n      list: [\n        {name: 'Python', star: 5},\n        {name: 'Javascript', star: 5},\n        {name: 'HTML/CSS', star: 5},\n        {name: 'Java', star: 4},\n        {name: 'C++', star: 3}\n      ]\n    },\n    {\n      title: 'Technology tools',\n      list: [\n        {name: 'Front End technolog', star: 5},\n        {name: 'Back End develope', star: 4},\n        {name: 'Database management', star: 5},\n        {name: 'Java', star: 4},\n        {name: 'C++', star: 3},\n        {name: 'C++', star: 3}\n      ]\n    },\n  ]\n}\n\nexport default metadata","import { combineReducers } from 'redux'\n\nimport action from './action'\nimport data from './data'\n\n\nconst rootReducer = combineReducers({\n  action, data\n})\n\nexport default rootReducer\n","import { createStore, applyMiddleware } from 'redux'\nimport rootReducer from '../reducers'\nimport thunk from 'redux-thunk'\n\nconst store = createStore(\n  rootReducer,\n  applyMiddleware(thunk)\n  )\n\nexport default store\n\n","import React from 'react';\nimport { render } from 'react-dom'\nimport { Provider } from 'react-redux'\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport store from './stores/stores'\n\nrender(\n  <Provider store={store}>\n    <App />\n  </Provider>\n  , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}